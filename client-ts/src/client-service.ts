/* eslint:disable */
// Code generated by gotsrpc https://github.com/foomo/gotsrpc/v2  - DO NOT EDIT.
import * as github_com_foomo_busser_service from './vo-service'; // ./client-ts/src/client-service.ts to ./client-ts/src/vo-service.ts
import * as github_com_foomo_busser_table from './vo-table'; // ./client-ts/src/client-service.ts to ./client-ts/src/vo-table.ts
import * as github_com_foomo_busser_table_validation from './vo-validation'; // ./client-ts/src/client-service.ts to ./client-ts/src/vo-validation.ts

export class ServiceClient {
	public static defaultEndpoint = "/services/busser";
	constructor(
		public transport:<T>(method: string, data?: any[]) => Promise<T>
	) {}
	async commit(id:github_com_foomo_busser_table.ID, version:github_com_foomo_busser_table.Version):Promise<github_com_foomo_busser_service.ErrorCommit|null> {
		return (await this.transport<{0:github_com_foomo_busser_service.ErrorCommit|null}>("Commit", [id, version]))[0]
	}
	async delete(id:github_com_foomo_busser_table.ID, versions:Array<github_com_foomo_busser_table.Version>|null):Promise<github_com_foomo_busser_service.ErrorDelete|null> {
		return (await this.transport<{0:github_com_foomo_busser_service.ErrorDelete|null}>("Delete", [id, versions]))[0]
	}
	async getCommitted(id:github_com_foomo_busser_table.ID):Promise<{t:github_com_foomo_busser_table.Table|null; vt:github_com_foomo_busser_table_validation.Table|null; err:github_com_foomo_busser_service.ErrorGet|null}> {
		const response = await this.transport<{0:github_com_foomo_busser_table.Table|null; 1:github_com_foomo_busser_table_validation.Table|null; 2:github_com_foomo_busser_service.ErrorGet|null}>("GetCommitted", [id])
		return {t : response[0], vt : response[1], err : response[2]};
	}
	async getVersion(id:github_com_foomo_busser_table.ID, version:github_com_foomo_busser_table.Version):Promise<{t:github_com_foomo_busser_table.Table|null; vt:github_com_foomo_busser_table_validation.Table|null; err:github_com_foomo_busser_service.ErrorGet|null}> {
		const response = await this.transport<{0:github_com_foomo_busser_table.Table|null; 1:github_com_foomo_busser_table_validation.Table|null; 2:github_com_foomo_busser_service.ErrorGet|null}>("GetVersion", [id, version])
		return {t : response[0], vt : response[1], err : response[2]};
	}
	async list():Promise<{ret:github_com_foomo_busser_table.Map; ret_1:github_com_foomo_busser_service.ErrorGet|null}> {
		const response = await this.transport<{0:github_com_foomo_busser_table.Map; 1:github_com_foomo_busser_service.ErrorGet|null}>("List", [])
		return {ret : response[0], ret_1 : response[1]};
	}
	async validate(id:github_com_foomo_busser_table.ID):Promise<{t:github_com_foomo_busser_table.Table|null; vt:github_com_foomo_busser_table_validation.Table|null; err:github_com_foomo_busser_service.ErrorValidation|null}> {
		const response = await this.transport<{0:github_com_foomo_busser_table.Table|null; 1:github_com_foomo_busser_table_validation.Table|null; 2:github_com_foomo_busser_service.ErrorValidation|null}>("Validate", [id])
		return {t : response[0], vt : response[1], err : response[2]};
	}
}